{"version":3,"file":"static/js/572.9d07ddd7.chunk.js","mappings":"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","sources":["Components/Find-Job/Job-more-info/index.jsx","Components/Find-Job/Job-more-info/JobInfo.jsx","Components/Find-Job/job-post-card/index.jsx","Components/JobListing/Job_listing_cards/index.jsx","Components/navbar/profile-dropdown/index.jsx","Components/navbar/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Chip,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { BsFillBagPlusFill } from \"react-icons/bs\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { getRequest } from \"../../../services/request\";\r\nimport { backend_url } from \"../../../http-backend\";\r\n\r\nconst JobPostMoreInfoCard = () => {\r\n  const [data, setData] = useState([]);\r\n  let id = localStorage.getItem(\"jobId\");\r\n\r\n  useEffect(() => {\r\n    function fetchData() {\r\n      getRequest({\r\n        url: `${backend_url}/post/getPostDetails/${id}`,\r\n      })\r\n        .then((res) => {\r\n          setData(res?.data?.data);\r\n          console.log(\"hello response\", res.data);\r\n        })\r\n        .catch((e) => {\r\n          setData([]);\r\n        });\r\n    }\r\n    fetchData();\r\n  }, [id]);\r\n  return (\r\n    <Box sx={{ height: \"100vh\" }}>\r\n      {data.length > 0 && (\r\n        <Card\r\n          sx={{\r\n            p: 2,\r\n            height: \"100vh\",\r\n            border: \"1px solid #d4d2d0\",\r\n          }}\r\n        >\r\n          <Box p={2} mb={1}>\r\n            <Typography fontSize={18} fontWeight={600}>\r\n              {data[0]?.title}\r\n            </Typography>\r\n            <Typography>{data[0]?.relatedTo}</Typography>\r\n            <Typography>{data[0].location}</Typography>\r\n            <Typography>\r\n              You must create an Indeed account before continuing to the company\r\n              website to apply\r\n            </Typography>\r\n            <Box mt={1} gap={4} display={\"flex\"}>\r\n              <Button\r\n                sx={{\r\n                  backgroundColor: \"#004c3d\",\r\n                  color: \"white\",\r\n                  fontWeight: 600,\r\n                  borderRadius: \"8px\",\r\n                  textTransform: \"none\",\r\n                  p: 1.5,\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                  },\r\n                }}\r\n              >\r\n                Apply on Company site\r\n              </Button>\r\n              <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Box>\r\n          <Divider />\r\n\r\n          <Box\r\n            p={2}\r\n            sx={{\r\n              overflowY: \"scroll\",\r\n              \"&::-webkit-scrollbar\": {\r\n                width: \"0.3em\" /* Set width of scrollbar */,\r\n                background: \"#F5F5F5\" /* Set background color of scrollbar */,\r\n              },\r\n              \"&::-webkit-scrollbar-thumb\": {\r\n                backgroundColor: \"#004c3d\" /* Set color of scrollbar thumb */,\r\n              },\r\n              height: \"70vh\",\r\n            }}\r\n          >\r\n            <Typography fontSize={18} fontWeight={600}>\r\n              Job details\r\n            </Typography>\r\n            <br />\r\n            <Typography fontWeight={600}>\r\n              <BsFillBagPlusFill /> {\"  \"} Job type\r\n            </Typography>\r\n            <Box display=\"flex\" gap={3} mt={1} mb={2}>\r\n              <Chip label=\"Fresher\" />\r\n              <Chip label=\"Frelance\" />\r\n            </Box>\r\n            <Typography fontWeight={600} mb={2}>\r\n              Salary: {data[0]?.salaryStart}-{data[0].salaryEnd} LPA{\" \"}\r\n              {data[0]?.salaryType}\r\n            </Typography>\r\n            <Typography fontWeight={600} mb={2}>\r\n              Shift and schedule: {data[0]?.shift}\r\n            </Typography>\r\n            <Typography fontWeight={600}>Qualification</Typography>\r\n            {data[0]?.qualifications && (\r\n              <ul style={{ listStyleType: \"circle\" }}>\r\n                {data[0]?.qualifications.map((qualifications, index) => (\r\n                  <li key={index}>{qualifications}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n\r\n            <Typography fontWeight={600} mb={2}>\r\n              {\" \"}\r\n              Job Discription\r\n            </Typography>\r\n            {data[0]?.discription}\r\n            <Typography fontWeight={600}>Responsibilities:</Typography>\r\n            {data[0]?.responsibilities && (\r\n              <ul style={{ listStyleType: \"circle\" }}>\r\n                {data[0]?.responsibilities.map((responsibilities, index) => (\r\n                  <li key={index}>{responsibilities}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </Box>\r\n        </Card>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JobPostMoreInfoCard;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport JobPostMoreInfoCard from \".\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function JobDetailsDialogs({ title }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        sx={{\r\n          color: \"white\",\r\n          backgroundColor: \"#004c3d\",\r\n          textTransform: \"none\",\r\n          \":hover\": {\r\n            color: \"white\",\r\n            backgroundColor: \"#004c3d\",\r\n            textTransform: \"none\",\r\n          },\r\n        }}\r\n        onClick={handleClickOpen}\r\n      >\r\n        More Info\r\n      </Button>\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          sx={{ m: 0, p: 2, fontWeight: 600 }}\r\n          id=\"customized-dialog-title\"\r\n        >\r\n          {title}\r\n        </DialogTitle>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <DialogContent\r\n          sx={{\r\n            overflowY: \"scroll\",\r\n            \"&::-webkit-scrollbar\": {\r\n              width: \"0.3em\" /* Set width of scrollbar */,\r\n              background: \"#F5F5F5\" /* Set background color of scrollbar */,\r\n            },\r\n            \"&::-webkit-scrollbar-thumb\": {\r\n              backgroundColor: \"#004c3d\" /* Set color of scrollbar thumb */,\r\n            },\r\n          }}\r\n        >\r\n          <JobPostMoreInfoCard />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            onClick={handleClose}\r\n            sx={{ textTransform: \"none\", color: \"#F5F5F5\" }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Snackbar,\r\n  SnackbarContent,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport { BsFillBagPlusFill } from \"react-icons/bs\";\r\nimport JobDetailsDialogs from \"../Job-more-info/JobInfo\";\r\nimport { doRequest, doRequests } from \"../../../services/request\";\r\nimport { backend_url } from \"../../../http-backend\";\r\nimport { Cookies, useCookies } from \"react-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { JobDataContext } from \"../../../context/JobDataContext\";\r\n\r\nconst JobPostCard = ({ searchResults, setSearchResults }) => {\r\n  const [jobId, setJobId] = useState(0);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n  const { savedata, data } = useContext(JobDataContext);\r\n  const [savedStatus, setSavedStatus] = useState({});\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const handleSnackbarOpen = () => {\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const cookie = new Cookies();\r\n  const userId = cookie.get(\"userId\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleJobClick = (jobId) => {\r\n    localStorage.setItem(\"jobId\", jobId);\r\n    setJobId(jobId);\r\n  };\r\n\r\n  const handleSubmit = async (data) => {\r\n    if (!userId) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n    const post = {\r\n      userId: userId,\r\n      jobId: data?._id,\r\n      title: data?.title,\r\n      imageUrl: data?.imageUrl,\r\n    };\r\n    console.log(\"knowledge\", post);\r\n\r\n    let payload = JSON.stringify(post);\r\n    doRequest({\r\n      url: `${backend_url}/post/saveJob`,\r\n      body: payload,\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Data successfully posted:\", post);\r\n        setIsSaved(true);\r\n        handleSnackbarOpen();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating knowledge:\", error);\r\n      });\r\n  };\r\n\r\n  const checkedIfSavedPostExists = () => {\r\n    const _id = data._id;\r\n    console.log(\"Checking if job is saved with jobId:\", _id);\r\n    console.log(\"Saved jobs data:\", savedata);\r\n\r\n    let exists = false;\r\n    savedata?.forEach((item) => {\r\n      if (item._id === _id) {\r\n        exists = true;\r\n        return;\r\n      }\r\n    });\r\n\r\n    console.log(\"Job saved status:\", exists);\r\n    return exists;\r\n  };\r\n\r\n  function timeAgoFromMongoData(mongoTimestamp) {\r\n    try {\r\n      // Parse the MongoDB timestamp string into a Date object\r\n      const mongoTime = new Date(mongoTimestamp);\r\n\r\n      // Get the current time\r\n      const currentTime = new Date();\r\n\r\n      // Calculate the time difference in milliseconds\r\n      const timeDifference = currentTime - mongoTime;\r\n\r\n      // Define time intervals\r\n      const intervals = [\r\n        { label: \"year\", seconds: 31536000 }, // 365 days\r\n        { label: \"month\", seconds: 2592000 }, // 30 days\r\n        { label: \"day\", seconds: 86400 }, // 24 hours\r\n        { label: \"hour\", seconds: 3600 }, // 60 minutes\r\n        { label: \"minute\", seconds: 60 }, // 60 seconds\r\n      ];\r\n\r\n      // Find the appropriate interval\r\n      for (const interval of intervals) {\r\n        const intervalValue = Math.floor(\r\n          timeDifference / (interval.seconds * 1000)\r\n        );\r\n        if (intervalValue >= 1) {\r\n          return intervalValue === 1\r\n            ? `1 ${interval.label} ago`\r\n            : `${intervalValue} ${interval.label}s ago`;\r\n        }\r\n      }\r\n\r\n      // If the time difference is less than a minute, return \"just now\"\r\n      return \"just now\";\r\n    } catch (error) {\r\n      return error.toString(); // Handle parsing errors or other exceptions as needed\r\n    }\r\n  }\r\n  // const checkedIfSavedPostExists = ( jobId) => {\r\n  //   let exists = false;\r\n  //   savedPosts?.forEach((item) => {\r\n  //     if (item._id ==  jobId) {\r\n  //       exists = true;\r\n  //       return;\r\n  //     }\r\n  //   });\r\n  //   return exists;\r\n  // };\r\n  const isMobile = useMediaQuery(\"(max-width: 600px)\");\r\n\r\n  const handleJobApply = () => {\r\n    if (!userId) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      navigate(\"/apply-for-job\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        overflowY: \"scroll\",\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"0.3em\" /* Set width of scrollbar */,\r\n          background: \"#F5F5F5\" /* Set background color of scrollbar */,\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          backgroundColor: \"#004c3d\" /* Set color of scrollbar thumb */,\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {searchResults?.map((data, idx) => (\r\n          <Card\r\n            sx={{\r\n              p: 2,\r\n              mb: 2,\r\n              border: \"1px solid #004c3d\",\r\n              width: isMobile ? \"100%\" : \"960px\",\r\n              flexDirection: \"column\",\r\n            }}\r\n            key={searchResults?._id}\r\n          >\r\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <Typography fontSize={18} fontWeight={600}>\r\n                {data?.title}\r\n              </Typography>\r\n              <Typography fontSize={18} fontWeight={600}>\r\n                {timeAgoFromMongoData(data?.createdAt)}\r\n              </Typography>\r\n            </Box>\r\n            <Typography>{data?.relatedTo}</Typography>\r\n            <Typography>{data?.location}</Typography>\r\n            <Typography fontWeight={600}>\r\n              <BsFillBagPlusFill /> {\"  \"}\r\n              {data?.totalExp}\r\n            </Typography>\r\n            {data?.responsibilities && (\r\n              <ul style={{ listStyleType: \"circle\" }}>\r\n                {data.responsibilities\r\n                  .slice(0, 3)\r\n                  .map((responsibility, index) => (\r\n                    <li key={index}>{responsibility}</li>\r\n                  ))}\r\n                {data.responsibilities.length > 3 && (\r\n                  <li>\r\n                    + {data.responsibilities.length - 3} more responsibilities\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            )}\r\n            {checkedIfSavedPostExists() ? (\r\n              <Button\r\n                sx={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"#004c3d\",\r\n                  textTransform: \"none\",\r\n                  \":hover\": {\r\n                    color: \"white\",\r\n                    backgroundColor: \"#004c3d\",\r\n                    textTransform: \"none\",\r\n                  },\r\n                }}\r\n                disabled={savedStatus[data._id]} // Disable the button if the job is saved\r\n                onClick={() => handleSubmit(data)}\r\n              >\r\n                Saved\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                sx={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"#004c3d\",\r\n                  textTransform: \"none\",\r\n                  \":hover\": {\r\n                    color: \"white\",\r\n                    backgroundColor: \"#004c3d\",\r\n                    textTransform: \"none\",\r\n                  },\r\n                }}\r\n                onClick={() => handleSubmit(data)}\r\n              >\r\n                Save Job\r\n              </Button>\r\n            )}\r\n\r\n            <Button onClick={() => handleJobClick(data?._id)}>\r\n              <JobDetailsDialogs title={data?.title} />\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={handleJobApply}\r\n              sx={{\r\n                color: \"white\",\r\n                backgroundColor: \"#004c3d\",\r\n                textTransform: \"none\",\r\n                \":hover\": {\r\n                  color: \"white\",\r\n                  backgroundColor: \"#004c3d\",\r\n                  textTransform: \"none\",\r\n                },\r\n              }}\r\n            >\r\n              Apply Now\r\n            </Button>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000} // Adjust the duration as needed\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <SnackbarContent\r\n          style={{ backgroundColor: \"#004c3d\" }} // Adjust the background color here\r\n          message=\"Job saved successfully\"\r\n        />\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JobPostCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Button, Card, Typography } from \"@mui/material\";\r\nimport { BsFillBagPlusFill } from \"react-icons/bs\";\r\nimport { getRequest } from \"../../../services/request\";\r\n\r\nconst JobListingCard = ({\r\n  _id,\r\n  title,\r\n  relatedTo,\r\n  location,\r\n  totalExp,\r\n  responsibilities,\r\n  createdAt,\r\n}) => {\r\n  const [jobId, setJobId] = useState(0);\r\n\r\n  const handleJobClick = (jobId) => {\r\n    // Store jobId in localStorage\r\n    localStorage.setItem(\"jobId\", jobId);\r\n    // Set jobId in state\r\n    setJobId(jobId);\r\n    // Perform any other action with jobId as needed\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        overflowY: \"scroll\",\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"0.3em\" /* Set width of scrollbar */,\r\n          background: \"#F5F5F5\" /* Set background color of scrollbar */,\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          backgroundColor: \"#004c3d\" /* Set color of scrollbar thumb */,\r\n        },\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{ p: 2, border: \"1px solid #d4d2d0\" }}\r\n        key={_id}\r\n        onClick={() => handleJobClick(_id)}\r\n      >\r\n        <Typography fontSize={18} fontWeight={600}>\r\n          {title}\r\n        </Typography>\r\n        <Typography>{relatedTo}</Typography>\r\n        <Typography>{location}</Typography>\r\n        <Typography fontWeight={600}>\r\n          <BsFillBagPlusFill /> {\"  \"}\r\n          {totalExp}\r\n        </Typography>\r\n        {responsibilities && (\r\n          <ul style={{ listStyleType: \"circle\" }}>\r\n            {responsibilities?.slice(0, 3).map((responsibility, index) => (\r\n              <li key={index}>{responsibility}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n\r\n        <Box justifyContent={\"space-between\"} display={\"flex\"}>\r\n          <Button variant=\"outlined\" color=\"primary\">\r\n            Save Job\r\n          </Button>\r\n          <Typography>{new Date(createdAt).toDateString()}</Typography>\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JobListingCard;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Settings from \"@mui/icons-material/Settings\";\r\nimport Logout from \"@mui/icons-material/Logout\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport default function ProfileMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const [, , removeCookies] = useCookies([\r\n    \"serviceToken\",\r\n    \"userId\",\r\n    \"role\",\r\n    \"userName\",\r\n    \"name\",\r\n    \"isLoggedIn\",\r\n  ]);\r\n\r\n  const handleLogout = () => {\r\n    removeCookies(\"serviceToken\");\r\n    removeCookies(\"userId\");\r\n    removeCookies(\"role\");\r\n    removeCookies(\"userName\");\r\n    removeCookies(\"name\");\r\n    removeCookies(\"isLoggedIn\");\r\n    handleClose();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\", textAlign: \"center\" }}>\r\n        <Tooltip title=\"Account settings\">\r\n          <IconButton\r\n            onClick={handleClick}\r\n            size=\"small\"\r\n            sx={{ ml: 2 }}\r\n            aria-controls={open ? \"account-menu\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? \"true\" : undefined}\r\n          >\r\n            <Avatar sx={{ width: 32, height: 32 }}>M</Avatar>\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        id=\"account-menu\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        onClick={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            overflow: \"visible\",\r\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n            mt: 1.5,\r\n            \"& .MuiAvatar-root\": {\r\n              width: 32,\r\n              height: 32,\r\n              ml: -0.5,\r\n              mr: 1,\r\n            },\r\n            \"&:before\": {\r\n              content: '\"\"',\r\n              display: \"block\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 14,\r\n              width: 10,\r\n              height: 10,\r\n              bgcolor: \"background.paper\",\r\n              transform: \"translateY(-50%) rotate(45deg)\",\r\n              zIndex: 0,\r\n            },\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n      >\r\n        <MenuItem onClick={handleClose}>\r\n          <Avatar /> Profile\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <ListItemIcon>\r\n            <Settings fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          Settings\r\n        </MenuItem>\r\n        <MenuItem onClick={handleLogout}>\r\n          <ListItemIcon>\r\n            <Logout fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          Logout\r\n        </MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport List from \"@mui/material/List\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport logo from \"../assest/logo2.png\";\r\nimport { Link, Link as RouterLink } from \"react-router-dom\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nimport PermIdentityIcon from \"@mui/icons-material/PermIdentity\";\r\nimport ProfileMenu from \"./profile-dropdown\";\r\n\r\nconst drawerWidth = 240;\r\nconst navItems = [\"Home\", \"About\", \"Contact\"];\r\n\r\nfunction NavbarApp(props) {\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const cookie = new Cookies();\r\n  const isLoggedIn = cookie.get(\"isLoggedIn\");\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const drawer = (\r\n    <Box onClick={handleDrawerToggle}>\r\n      <List>\r\n        <Box display={\"grid\"} gap={2} sx={{ textAlign: \"left\", mt: 6 }}>\r\n          <Button\r\n            sx={{ textTransform: \"none\", fontSize: 16, color: \"black\" }}\r\n            component={RouterLink}\r\n            to=\"/jobsearch\"\r\n          >\r\n            Find jobs\r\n          </Button>\r\n\r\n          <Button\r\n            sx={{ textTransform: \"none\", fontSize: 16, color: \"black\" }}\r\n            component={RouterLink}\r\n            to=\"/company-review\"\r\n          >\r\n            Company reviews\r\n          </Button>\r\n\r\n          <Button\r\n            sx={{ textTransform: \"none\", fontSize: 16, color: \"black\" }}\r\n            component={RouterLink}\r\n            to=\"/\"\r\n          >\r\n            Quize\r\n          </Button>\r\n\r\n          <Button\r\n            sx={{ textTransform: \"none\", fontSize: 16, color: \"black\" }}\r\n            component={RouterLink}\r\n            to=\"/saved\"\r\n          >\r\n            Saved\r\n          </Button>\r\n\r\n          <Button\r\n            sx={{ textTransform: \"none\", fontSize: 16, color: \"black\" }}\r\n            component={RouterLink}\r\n            to=\"/\"\r\n          >\r\n            Post your resume\r\n          </Button>\r\n\r\n          <Button\r\n            sx={{ textTransform: \"none\", fontSize: 16, color: \"black\" }}\r\n            component={RouterLink}\r\n            to=\"/joblisting\"\r\n          >\r\n            Post job\r\n          </Button>\r\n\r\n          {isLoggedIn ? (\r\n            <Box>\r\n              <ProfileMenu />\r\n            </Box>\r\n          ) : (\r\n            <Button\r\n              sx={{ textTransform: \"none\", fontSize: 16, color: \"black\" }}\r\n              component={RouterLink}\r\n              to=\"/login\"\r\n            >\r\n              <PermIdentityIcon /> LogIn\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", backgroundColor: \"#004c3d\" }}>\r\n      <CssBaseline />\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          edge=\"start\"\r\n          onClick={handleDrawerToggle}\r\n          sx={{ mr: 2, display: { sm: \"none\" } }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"div\"\r\n          sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\r\n        >\r\n          <Link to={\"/\"}>\r\n            <img\r\n              style={{\r\n                width: \"100px\",\r\n                height: \"70px\",\r\n              }}\r\n              src={logo}\r\n              alt=\"logo\"\r\n            />\r\n          </Link>\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            justifyContent: \"space-between\",\r\n            width: \"88vw\",\r\n            display: { xs: \"none\", sm: \"block\", lg: \"flex\" },\r\n          }}\r\n        >\r\n          <Box>\r\n            <Button\r\n              sx={{ color: \"#fff\", textTransform: \"none\", fontSize: 16, ml: 4 }}\r\n              component={RouterLink}\r\n              to=\"/jobsearch\"\r\n            >\r\n              Find jobs\r\n            </Button>\r\n\r\n            <Button\r\n              sx={{ color: \"#fff\", textTransform: \"none\", fontSize: 16, ml: 4 }}\r\n              component={RouterLink}\r\n              to=\"/company-review\"\r\n            >\r\n              Company reviews\r\n            </Button>\r\n\r\n            <Button\r\n              sx={{ color: \"#fff\", textTransform: \"none\", fontSize: 16, ml: 4 }}\r\n              component={RouterLink}\r\n              to=\"/quize\"\r\n            >\r\n              Quize\r\n            </Button>\r\n\r\n            <Button\r\n              sx={{ color: \"#fff\", textTransform: \"none\", fontSize: 16, ml: 4 }}\r\n              component={RouterLink}\r\n              to=\"/saved\"\r\n            >\r\n              Saved\r\n            </Button>\r\n\r\n            <Button\r\n              sx={{ color: \"#fff\", textTransform: \"none\", fontSize: 16, ml: 4 }}\r\n              component={RouterLink}\r\n              to=\"/\"\r\n            >\r\n              Post your resume\r\n            </Button>\r\n\r\n            <Button\r\n              sx={{ color: \"#fff\", textTransform: \"none\", fontSize: 16, ml: 4 }}\r\n              component={RouterLink}\r\n              to=\"/joblisting\"\r\n            >\r\n              Post job\r\n            </Button>\r\n          </Box>\r\n\r\n          <Box>\r\n            {isLoggedIn ? (\r\n              <Box>\r\n                <ProfileMenu />\r\n              </Box>\r\n            ) : (\r\n              <Button\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  textTransform: \"none\",\r\n                  fontSize: 16,\r\n                  ml: 4,\r\n                }}\r\n                component={RouterLink}\r\n                to=\"/login\"\r\n              >\r\n                <PermIdentityIcon /> LogIn\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Toolbar>\r\n      <nav>\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </nav>\r\n    </Box>\r\n  );\r\n}\r\n\r\nNavbarApp.propTypes = {\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default NavbarApp;\r\n"],"names":["_data$","_data$2","_data$3","_data$4","_data$5","_data$6","_data$7","_data$8","_data$9","_data$10","_useState","useState","_useState2","_slicedToArray","data","setData","id","localStorage","getItem","useEffect","getRequest","url","concat","backend_url","then","res","_res$data","console","log","catch","e","_jsx","Box","sx","height","children","length","_jsxs","Card","p","border","mb","Typography","fontSize","fontWeight","title","relatedTo","location","mt","gap","display","Button","backgroundColor","color","borderRadius","textTransform","IconButton","FavoriteIcon","Divider","overflowY","width","background","BsFillBagPlusFill","Chip","label","salaryStart","salaryEnd","salaryType","shift","qualifications","style","listStyleType","map","index","discription","responsibilities","BootstrapDialog","styled","Dialog","_ref","theme","padding","spacing","JobDetailsDialogs","_ref2","_React$useState","React","_React$useState2","open","setOpen","handleClose","onClick","onClose","DialogTitle","m","position","right","top","palette","grey","CloseIcon","DialogContent","JobPostMoreInfoCard","DialogActions","autoFocus","searchResults","setSearchResults","setJobId","_useState3","_useState4","setIsSaved","_useContext","useContext","JobDataContext","savedata","_useState5","_useState6","savedStatus","_useState7","_useState8","snackbarOpen","setSnackbarOpen","userId","Cookies","get","navigate","useNavigate","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","post","payload","wrap","_context","prev","next","abrupt","jobId","_id","imageUrl","JSON","stringify","doRequest","body","method","response","error","stop","_x","apply","arguments","checkedIfSavedPostExists","exists","forEach","item","timeAgoFromMongoData","mongoTimestamp","mongoTime","Date","timeDifference","_i","_intervals","seconds","interval","intervalValue","Math","floor","toString","isMobile","useMediaQuery","handleJobApply","justifyContent","alignItems","flexDirection","idx","createdAt","totalExp","slice","responsibility","disabled","setItem","handleJobClick","Snackbar","autoHideDuration","SnackbarContent","message","variant","toDateString","ProfileMenu","anchorEl","setAnchorEl","Boolean","_useCookies","useCookies","removeCookies","textAlign","Tooltip","event","currentTarget","size","ml","undefined","Avatar","Menu","PaperProps","elevation","overflow","filter","mr","content","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","ListItemIcon","Settings","Logout","props","window","mobileOpen","setMobileOpen","isLoggedIn","handleDrawerToggle","prevState","drawer","List","component","RouterLink","to","PermIdentityIcon","container","document","CssBaseline","Toolbar","edge","sm","MenuIcon","flexGrow","xs","Link","src","logo","alt","lg","Drawer","ModalProps","keepMounted","boxSizing"],"sourceRoot":""}