{"version":3,"file":"static/js/959.617318d2.chunk.js","mappings":"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","sources":["Components/createjob/index.jsx","Pages/job-details-page/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { doRequest } from \"../../services/request\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nconst Createjob = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const cookie = new Cookies();\r\n  const isLoggedIn = cookie.get(\"isLoggedIn\");\r\n  // Step 1 State\r\n  const [title, setTitle] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [discription, setDiscription] = useState(\"\");\r\n  const [relatedTo, setRelatedTo] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  // Step 2 State\r\n  const [responsibilities, setResponsibilities] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const [salaryStart, setSalaryStart] = useState(\"\");\r\n  const [salaryEnd, setSalaryEnd] = useState(\"\");\r\n  const [shift, setShift] = useState(\"\");\r\n\r\n  // Step 3 State\r\n  const [requirements, setRequirements] = useState(\"\");\r\n  const [qualifications, setQualifications] = useState(\"\");\r\n  const [education, setEducation] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"\");\r\n\r\n  // Step 4 State\r\n  const [noticePeriod, setNoticePeriod] = useState(\"\");\r\n  const [jobType, setJobType] = useState(\"\");\r\n  const [totalExp, setTotalExp] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submission behavior\r\n\r\n    const parseCommaSeparatedString = (str) => {\r\n      return str.split(\",\").map((item) => item.trim());\r\n    };\r\n    const parseCommaSeparatedStringTags = (str) => {\r\n      return str.split(\",\").map((item) => ({ name: item.trim() }));\r\n    };\r\n    const responsibilitiesArray = parseCommaSeparatedString(responsibilities);\r\n    const requirementsArray = parseCommaSeparatedString(requirements);\r\n    const tagsArray = parseCommaSeparatedStringTags(tags);\r\n    const startSalary = parseFloat(salaryStart);\r\n    const endSalary = parseFloat(salaryEnd);\r\n\r\n    const qualificationsArray = parseCommaSeparatedString(qualifications);\r\n    const educationArray = parseCommaSeparatedString(education);\r\n    const experienceArray = parseCommaSeparatedString(experience);\r\n    const languageArray = parseCommaSeparatedString(language);\r\n\r\n    const post = {\r\n      title,\r\n      location,\r\n      discription,\r\n      relatedTo,\r\n      imageUrl,\r\n      responsibilities: responsibilitiesArray,\r\n      tags: tagsArray,\r\n      salaryStart: !isNaN(startSalary) ? startSalary : null,\r\n      salaryEnd: !isNaN(endSalary) ? endSalary : null,\r\n      shift,\r\n      requirements: requirementsArray,\r\n      qualifications: qualificationsArray,\r\n      education: educationArray,\r\n      experience: experienceArray,\r\n      language: languageArray,\r\n      noticePeriod,\r\n      jobType,\r\n      totalExp,\r\n    };\r\n    console.log(\"ky ahia\", post);\r\n\r\n    let payload = JSON.stringify(post);\r\n    doRequest({\r\n      url: \"/post/createPostWithTitle\",\r\n      body: payload,\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"knowledge\", post);\r\n        setTitle(\"\");\r\n        setLocation(\"\");\r\n        setDiscription(\"\");\r\n        setRelatedTo(\"\");\r\n        setImageUrl(\"\");\r\n        setResponsibilities(\"\");\r\n        setTags(\"\");\r\n        setSalaryStart(\"\");\r\n        setSalaryEnd(\"\");\r\n        setShift(\"\");\r\n        setRequirements(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating knowledge:\", error);\r\n      });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevStep) => prevStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevStep) => prevStep - 1);\r\n  };\r\n\r\n  const steps = [\"Step 1\", \"Step 2\", \"Step 3\", \"Step 4\"];\r\n\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        <Box>\r\n          <Stepper activeStep={activeStep} alternativeLabel>\r\n            {steps.map((label, index) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            component=\"form\"\r\n            mt={4}\r\n          >\r\n            {activeStep === 0 && (\r\n              <Box maxWidth={600}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Add job basics - Step 1\r\n                </Typography>\r\n                <Box display={\"flex\"} gap={5}>\r\n                  <TextField\r\n                    required\r\n                    label=\" Job Title\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ex. Software Engg.\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    label=\"Location\"\r\n                    placeholder=\"Ex. Pune\"\r\n                    variant=\"outlined\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <TextField\r\n                  label=\"Description\"\r\n                  variant=\"outlined\"\r\n                  value={discription}\r\n                  onChange={(e) => setDiscription(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows={3}\r\n                />\r\n                <TextField\r\n                  label=\"Related To\"\r\n                  placeholder=\"ex: Infosys\"\r\n                  variant=\"outlined\"\r\n                  value={relatedTo}\r\n                  onChange={(e) => setRelatedTo(e.target.value)}\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Image URL\"\r\n                  variant=\"outlined\"\r\n                  value={imageUrl}\r\n                  onChange={(e) => setImageUrl(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <Button\r\n                  onClick={handleNext}\r\n                  sx={{\r\n                    mt: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n              <Box maxWidth={600}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Add job basics - Step 2\r\n                </Typography>\r\n                <TextField\r\n                  label=\"Responsibilities\"\r\n                  variant=\"outlined\"\r\n                  value={responsibilities}\r\n                  onChange={(e) => setResponsibilities(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows={4}\r\n                />\r\n                <TextField\r\n                  label=\"Tags\"\r\n                  placeholder=\"Ex. Node, Html\"\r\n                  variant=\"outlined\"\r\n                  value={tags}\r\n                  onChange={(e) => setTags(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <Box sx={{ display: \"flex\", gap: 5 }}>\r\n                  <TextField\r\n                    label=\"Salary Start\"\r\n                    placeholder=\"Ex.5lpa\"\r\n                    variant=\"outlined\"\r\n                    value={salaryStart}\r\n                    onChange={(e) => setSalaryStart(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    label=\"Salary End\"\r\n                    placeholder=\"Ex. 10lpa\"\r\n                    variant=\"outlined\"\r\n                    value={salaryEnd}\r\n                    onChange={(e) => setSalaryEnd(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <TextField\r\n                  label=\"Shift\"\r\n                  placeholder=\"Ex. Morning\"\r\n                  variant=\"outlined\"\r\n                  value={shift}\r\n                  onChange={(e) => setShift(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n\r\n                <Button\r\n                  onClick={handleBack}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={handleNext}\r\n                  sx={{\r\n                    mt: 4,\r\n                    ml: 4,\r\n\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    mb: 4,\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n              <Box maxWidth={600}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Add job basics - Step 3\r\n                </Typography>\r\n                <TextField\r\n                  label=\"Requirements\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={requirements}\r\n                  onChange={(e) => setRequirements(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows={3}\r\n                />\r\n                <Box sx={{ display: \"flex\", gap: 5 }}>\r\n                  <TextField\r\n                    label=\"Qualifications\"\r\n                    placeholder=\"Ex. Js, Python experince\"\r\n                    variant=\"outlined\"\r\n                    value={qualifications}\r\n                    onChange={(e) => setQualifications(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    label=\"Education\"\r\n                    placeholder=\"Ex. Btech\"\r\n                    variant=\"outlined\"\r\n                    value={education}\r\n                    onChange={(e) => setEducation(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <TextField\r\n                  label=\"Experience\"\r\n                  variant=\"outlined\"\r\n                  value={experience}\r\n                  onChange={(e) => setExperience(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Language\"\r\n                  placeholder=\"Ex. English\"\r\n                  variant=\"outlined\"\r\n                  value={language}\r\n                  onChange={(e) => setLanguage(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n\r\n                <Button\r\n                  onClick={handleBack}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  onClick={handleNext}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    ml: 4,\r\n\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n              <Box maxWidth={600}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Add job basics - Step 4\r\n                </Typography>\r\n                <TextField\r\n                  label=\"Notice Period\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={noticePeriod}\r\n                  onChange={(e) => setNoticePeriod(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Job Type\"\r\n                  placeholder=\"Ex. Remote\"\r\n                  variant=\"outlined\"\r\n                  value={jobType}\r\n                  onChange={(e) => setJobType(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Total Experience\"\r\n                  variant=\"outlined\"\r\n                  value={totalExp}\r\n                  onChange={(e) => setTotalExp(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n\r\n                <Button\r\n                  onClick={handleBack}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    ml: 4,\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    ml: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Create Post\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={12}\r\n          lg={12}\r\n          xl={12}\r\n          style={{ textAlign: \"center\", justifyContent: \"center\" }}\r\n        >\r\n          <Typography variant=\"h5\">Please logIn for create job post</Typography>\r\n          <Typography\r\n            sx={{\r\n              fontWeight: 600,\r\n              fontSize: 20,\r\n              color: \"#004c3d\",\r\n              cursor: \"pointer\",\r\n              textDecoration: \"none\",\r\n            }}\r\n            component={Link}\r\n            to=\"/login\"\r\n          >\r\n            Login\r\n          </Typography>\r\n          <Box>\r\n            <img\r\n              src=\"https://media.tenor.com/p0G_bmA2vSYAAAAd/login.gif\"\r\n              alt=\"gif\"\r\n              style={{ height: 400 }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Createjob;\r\n","import React from \"react\";\r\nimport Login from \"../../Components/Login\";\r\nimport JobPostMoreInfoCard from \"../../Components/Find-Job/Job-more-info\";\r\nimport JobPostCard from \"../../Components/Find-Job/job-post-card\";\r\nimport JobListing from \"../../Components/JobListing\";\r\nimport { Box } from \"@mui/material\";\r\nimport CreatePostForm from \"../../Components/createjob\";\r\nimport NavbarApp from \"../../Components/navbar\";\r\n\r\nfunction JobDetailsPage() {\r\n  return (\r\n    <>\r\n      <Box sx={{ position: \"fixed\", top: 0, zIndex: 99999, width: \"100%\" }}>\r\n        <NavbarApp />\r\n      </Box>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <CreatePostForm />\r\n      {/* <JobListing /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobDetailsPage;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","activeStep","setActiveStep","isLoggedIn","Cookies","get","_useState3","_useState4","title","setTitle","_useState5","_useState6","location","setLocation","_useState7","_useState8","discription","setDiscription","_useState9","_useState10","relatedTo","setRelatedTo","_useState11","_useState12","imageUrl","setImageUrl","_useState13","_useState14","responsibilities","setResponsibilities","_useState15","_useState16","tags","setTags","_useState17","_useState18","salaryStart","setSalaryStart","_useState19","_useState20","salaryEnd","setSalaryEnd","_useState21","_useState22","shift","setShift","_useState23","_useState24","requirements","setRequirements","_useState25","_useState26","qualifications","setQualifications","_useState27","_useState28","education","setEducation","_useState29","_useState30","experience","setExperience","_useState31","_useState32","language","setLanguage","_useState33","_useState34","noticePeriod","setNoticePeriod","_useState35","_useState36","jobType","setJobType","_useState37","_useState38","totalExp","setTotalExp","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","parseCommaSeparatedString","parseCommaSeparatedStringTags","responsibilitiesArray","requirementsArray","tagsArray","startSalary","endSalary","qualificationsArray","educationArray","experienceArray","languageArray","post","payload","wrap","_context","prev","next","preventDefault","str","split","map","item","name","trim","parseFloat","isNaN","console","log","JSON","stringify","doRequest","url","body","method","then","response","catch","error","stop","_x","apply","arguments","handleNext","prevStep","handleBack","_jsx","_Fragment","children","_jsxs","Box","Stepper","alternativeLabel","label","index","Step","StepLabel","display","flexDirection","alignItems","justifyContent","component","mt","maxWidth","Typography","variant","gap","TextField","required","placeholder","value","onChange","target","margin","fullWidth","multiline","rows","Button","onClick","sx","backgroundColor","color","textTransform","mb","ml","Grid","xs","md","lg","xl","style","textAlign","fontWeight","fontSize","cursor","textDecoration","Link","to","src","alt","height","position","top","zIndex","width","NavbarApp","CreatePostForm"],"sourceRoot":""}