{"version":3,"file":"static/js/68.4eebe4d4.chunk.js","mappings":"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","sources":["Components/createjob/index.jsx","../node_modules/@mui/material/StepButton/stepButtonClasses.js","../node_modules/@mui/material/StepButton/StepButton.js","Components/Find-Job/Apply.jsx","Pages/apply-form-page/index.jsx","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { doRequest } from \"../../services/request\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nconst Createjob = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const cookie = new Cookies();\r\n  const isLoggedIn = cookie.get(\"isLoggedIn\");\r\n  // Step 1 State\r\n  const [title, setTitle] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [discription, setDiscription] = useState(\"\");\r\n  const [relatedTo, setRelatedTo] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  // Step 2 State\r\n  const [responsibilities, setResponsibilities] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const [salaryStart, setSalaryStart] = useState(\"\");\r\n  const [salaryEnd, setSalaryEnd] = useState(\"\");\r\n  const [shift, setShift] = useState(\"\");\r\n\r\n  // Step 3 State\r\n  const [requirements, setRequirements] = useState(\"\");\r\n  const [qualifications, setQualifications] = useState(\"\");\r\n  const [education, setEducation] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"\");\r\n\r\n  // Step 4 State\r\n  const [noticePeriod, setNoticePeriod] = useState(\"\");\r\n  const [jobType, setJobType] = useState(\"\");\r\n  const [totalExp, setTotalExp] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submission behavior\r\n\r\n    const parseCommaSeparatedString = (str) => {\r\n      return str.split(\",\").map((item) => item.trim());\r\n    };\r\n    const parseCommaSeparatedStringTags = (str) => {\r\n      return str.split(\",\").map((item) => ({ name: item.trim() }));\r\n    };\r\n    const responsibilitiesArray = parseCommaSeparatedString(responsibilities);\r\n    const requirementsArray = parseCommaSeparatedString(requirements);\r\n    const tagsArray = parseCommaSeparatedStringTags(tags);\r\n    const startSalary = parseFloat(salaryStart);\r\n    const endSalary = parseFloat(salaryEnd);\r\n\r\n    const qualificationsArray = parseCommaSeparatedString(qualifications);\r\n    const educationArray = parseCommaSeparatedString(education);\r\n    const experienceArray = parseCommaSeparatedString(experience);\r\n    const languageArray = parseCommaSeparatedString(language);\r\n\r\n    const post = {\r\n      title,\r\n      location,\r\n      discription,\r\n      relatedTo,\r\n      imageUrl,\r\n      responsibilities: responsibilitiesArray,\r\n      tags: tagsArray,\r\n      salaryStart: !isNaN(startSalary) ? startSalary : null,\r\n      salaryEnd: !isNaN(endSalary) ? endSalary : null,\r\n      shift,\r\n      requirements: requirementsArray,\r\n      qualifications: qualificationsArray,\r\n      education: educationArray,\r\n      experience: experienceArray,\r\n      language: languageArray,\r\n      noticePeriod,\r\n      jobType,\r\n      totalExp,\r\n    };\r\n    console.log(\"ky ahia\", post);\r\n\r\n    let payload = JSON.stringify(post);\r\n    doRequest({\r\n      url: \"/post/createPostWithTitle\",\r\n      body: payload,\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"knowledge\", post);\r\n        setTitle(\"\");\r\n        setLocation(\"\");\r\n        setDiscription(\"\");\r\n        setRelatedTo(\"\");\r\n        setImageUrl(\"\");\r\n        setResponsibilities(\"\");\r\n        setTags(\"\");\r\n        setSalaryStart(\"\");\r\n        setSalaryEnd(\"\");\r\n        setShift(\"\");\r\n        setRequirements(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating knowledge:\", error);\r\n      });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevStep) => prevStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevStep) => prevStep - 1);\r\n  };\r\n\r\n  const steps = [\"Step 1\", \"Step 2\", \"Step 3\", \"Step 4\"];\r\n\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        <Box>\r\n          <Stepper activeStep={activeStep} alternativeLabel>\r\n            {steps.map((label, index) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            component=\"form\"\r\n            mt={4}\r\n          >\r\n            {activeStep === 0 && (\r\n              <Box maxWidth={600}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Add job basics - Step 1\r\n                </Typography>\r\n                <Box display={\"flex\"} gap={5}>\r\n                  <TextField\r\n                    required\r\n                    label=\" Job Title\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ex. Software Engg.\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    label=\"Location\"\r\n                    placeholder=\"Ex. Pune\"\r\n                    variant=\"outlined\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <TextField\r\n                  label=\"Description\"\r\n                  variant=\"outlined\"\r\n                  value={discription}\r\n                  onChange={(e) => setDiscription(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows={3}\r\n                />\r\n                <TextField\r\n                  label=\"Related To\"\r\n                  placeholder=\"ex: Infosys\"\r\n                  variant=\"outlined\"\r\n                  value={relatedTo}\r\n                  onChange={(e) => setRelatedTo(e.target.value)}\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Image URL\"\r\n                  variant=\"outlined\"\r\n                  value={imageUrl}\r\n                  onChange={(e) => setImageUrl(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <Button\r\n                  onClick={handleNext}\r\n                  sx={{\r\n                    mt: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n              <Box maxWidth={600}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Add job basics - Step 2\r\n                </Typography>\r\n                <TextField\r\n                  label=\"Responsibilities\"\r\n                  variant=\"outlined\"\r\n                  value={responsibilities}\r\n                  onChange={(e) => setResponsibilities(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows={4}\r\n                />\r\n                <TextField\r\n                  label=\"Tags\"\r\n                  placeholder=\"Ex. Node, Html\"\r\n                  variant=\"outlined\"\r\n                  value={tags}\r\n                  onChange={(e) => setTags(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <Box sx={{ display: \"flex\", gap: 5 }}>\r\n                  <TextField\r\n                    label=\"Salary Start\"\r\n                    placeholder=\"Ex.5lpa\"\r\n                    variant=\"outlined\"\r\n                    value={salaryStart}\r\n                    onChange={(e) => setSalaryStart(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    label=\"Salary End\"\r\n                    placeholder=\"Ex. 10lpa\"\r\n                    variant=\"outlined\"\r\n                    value={salaryEnd}\r\n                    onChange={(e) => setSalaryEnd(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <TextField\r\n                  label=\"Shift\"\r\n                  placeholder=\"Ex. Morning\"\r\n                  variant=\"outlined\"\r\n                  value={shift}\r\n                  onChange={(e) => setShift(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n\r\n                <Button\r\n                  onClick={handleBack}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={handleNext}\r\n                  sx={{\r\n                    mt: 4,\r\n                    ml: 4,\r\n\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    mb: 4,\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n              <Box maxWidth={600}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Add job basics - Step 3\r\n                </Typography>\r\n                <TextField\r\n                  label=\"Requirements\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={requirements}\r\n                  onChange={(e) => setRequirements(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows={3}\r\n                />\r\n                <Box sx={{ display: \"flex\", gap: 5 }}>\r\n                  <TextField\r\n                    label=\"Qualifications\"\r\n                    placeholder=\"Ex. Js, Python experince\"\r\n                    variant=\"outlined\"\r\n                    value={qualifications}\r\n                    onChange={(e) => setQualifications(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    label=\"Education\"\r\n                    placeholder=\"Ex. Btech\"\r\n                    variant=\"outlined\"\r\n                    value={education}\r\n                    onChange={(e) => setEducation(e.target.value)}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n                <TextField\r\n                  label=\"Experience\"\r\n                  variant=\"outlined\"\r\n                  value={experience}\r\n                  onChange={(e) => setExperience(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Language\"\r\n                  placeholder=\"Ex. English\"\r\n                  variant=\"outlined\"\r\n                  value={language}\r\n                  onChange={(e) => setLanguage(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n\r\n                <Button\r\n                  onClick={handleBack}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  onClick={handleNext}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    ml: 4,\r\n\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Box>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n              <Box maxWidth={600}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Add job basics - Step 4\r\n                </Typography>\r\n                <TextField\r\n                  label=\"Notice Period\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={noticePeriod}\r\n                  onChange={(e) => setNoticePeriod(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Job Type\"\r\n                  placeholder=\"Ex. Remote\"\r\n                  variant=\"outlined\"\r\n                  value={jobType}\r\n                  onChange={(e) => setJobType(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Total Experience\"\r\n                  variant=\"outlined\"\r\n                  value={totalExp}\r\n                  onChange={(e) => setTotalExp(e.target.value)}\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                />\r\n\r\n                <Button\r\n                  onClick={handleBack}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    ml: 4,\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  sx={{\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    ml: 4,\r\n                    backgroundColor: \"#004c3d\",\r\n                    color: \"white\",\r\n                    textTransform: \"none\",\r\n                    \":hover\": {\r\n                      backgroundColor: \"#004c3d\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Create Post\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={12}\r\n          lg={12}\r\n          xl={12}\r\n          style={{ textAlign: \"center\", justifyContent: \"center\" }}\r\n        >\r\n          <Typography variant=\"h5\">Please logIn for create job post</Typography>\r\n          <Typography\r\n            sx={{\r\n              fontWeight: 600,\r\n              fontSize: 20,\r\n              color: \"#004c3d\",\r\n              cursor: \"pointer\",\r\n              textDecoration: \"none\",\r\n            }}\r\n            component={Link}\r\n            to=\"/login\"\r\n          >\r\n            Login\r\n          </Typography>\r\n          <Box>\r\n            <img\r\n              src=\"https://media.tenor.com/p0G_bmA2vSYAAAAd/login.gif\"\r\n              alt=\"gif\"\r\n              style={{ height: 400 }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Createjob;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getStepButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiStepButton', slot);\n}\nconst stepButtonClasses = generateUtilityClasses('MuiStepButton', ['root', 'horizontal', 'vertical', 'touchRipple']);\nexport default stepButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"icon\", \"optional\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport StepLabel from '../StepLabel';\nimport isMuiElement from '../utils/isMuiElement';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from '../Step/StepContext';\nimport stepButtonClasses, { getStepButtonUtilityClass } from './stepButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation],\n    touchRipple: ['touchRipple']\n  };\n  return composeClasses(slots, getStepButtonUtilityClass, classes);\n};\nconst StepButtonRoot = styled(ButtonBase, {\n  name: 'MuiStepButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${stepButtonClasses.touchRipple}`]: styles.touchRipple\n    }, styles.root, styles[ownerState.orientation]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  width: '100%',\n  padding: '24px 16px',\n  margin: '-24px -16px',\n  boxSizing: 'content-box'\n}, ownerState.orientation === 'vertical' && {\n  justifyContent: 'flex-start',\n  padding: '8px',\n  margin: '-8px'\n}, {\n  [`& .${stepButtonClasses.touchRipple}`]: {\n    color: 'rgba(0, 0, 0, 0.3)'\n  }\n}));\nconst StepButton = /*#__PURE__*/React.forwardRef(function StepButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepButton'\n  });\n  const {\n      children,\n      className,\n      icon,\n      optional\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    disabled,\n    active\n  } = React.useContext(StepContext);\n  const {\n    orientation\n  } = React.useContext(StepperContext);\n  const ownerState = _extends({}, props, {\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {\n    icon,\n    optional\n  };\n  const child = isMuiElement(children, ['StepLabel']) ? /*#__PURE__*/React.cloneElement(children, childProps) : /*#__PURE__*/_jsx(StepLabel, _extends({}, childProps, {\n    children: children\n  }));\n  return /*#__PURE__*/_jsx(StepButtonRoot, _extends({\n    focusRipple: true,\n    disabled: disabled,\n    TouchRippleProps: {\n      className: classes.touchRipple\n    },\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    \"aria-current\": active ? 'step' : undefined\n  }, other, {\n    children: child\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon displayed by the step label.\n   */\n  icon: PropTypes.node,\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default StepButton;","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepButton from \"@mui/material/StepButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst steps = [\r\n  \"Contact Information\",\r\n  \"Education and Experience\",\r\n  \"Upload Resume\",\r\n];\r\n\r\nexport default function ApplyForm() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n\r\n  const [formData, setFormData] = React.useState({\r\n    contactInfo: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n      city: \"\",\r\n      county: \"\",\r\n    },\r\n    educationExperience: {\r\n      education: \"\",\r\n      experience: \"\",\r\n    },\r\n    resume: null,\r\n  });\r\n\r\n  const handleFormChange = (step, field, value) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [step]: {\r\n        ...prevData[step],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      resume: event.target.files[0],\r\n    });\r\n  };\r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              maxWidth: 600,\r\n              gap: 20,\r\n              mt: 2,\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n                mt: 5,\r\n              }}\r\n              variant=\"h5\"\r\n              fontWeight={600}\r\n            >\r\n              Add your contact information\r\n            </Typography>\r\n            <TextField\r\n              label=\"First Name\"\r\n              value={formData.contactInfo.firstName}\r\n              onChange={(e) =>\r\n                handleFormChange(\"contactInfo\", \"firstName\", e.target.value)\r\n              }\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              label=\"Last Name\"\r\n              value={formData.contactInfo.lastName}\r\n              onChange={(e) =>\r\n                handleFormChange(\"contactInfo\", \"lastName\", e.target.value)\r\n              }\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              label=\"Email\"\r\n              value={formData.contactInfo.email}\r\n              onChange={(e) =>\r\n                handleFormChange(\"contactInfo\", \"email\", e.target.value)\r\n              }\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              label=\"Phone Number\"\r\n              value={formData.contactInfo.phoneNumber}\r\n              onChange={(e) =>\r\n                handleFormChange(\"contactInfo\", \"phoneNumber\", e.target.value)\r\n              }\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              label=\"City (Optional)\"\r\n              value={formData.contactInfo.city}\r\n              onChange={(e) =>\r\n                handleFormChange(\"contactInfo\", \"city\", e.target.value)\r\n              }\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              label=\"County (Optional)\"\r\n              value={formData.contactInfo.county}\r\n              onChange={(e) =>\r\n                handleFormChange(\"contactInfo\", \"county\", e.target.value)\r\n              }\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              maxWidth: 700,\r\n              gap: 20,\r\n              marginLeft: \"20px\",\r\n            }}\r\n          >\r\n            <br />\r\n            <Typography\r\n              sx={{\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n                mt: 5,\r\n              }}\r\n              variant=\"h5\"\r\n              fontWeight={600}\r\n            >\r\n              Answer these questions from the employer\r\n            </Typography>\r\n            <TextField\r\n              label=\"Current CTC\"\r\n              value={formData.educationExperience.education}\r\n              onChange={(e) =>\r\n                handleFormChange(\r\n                  \"educationExperience\",\r\n                  \"education\",\r\n                  e.target.value\r\n                )\r\n              }\r\n              size=\"small\"\r\n            />\r\n\r\n            <TextField\r\n              label=\"Expected CTC\"\r\n              value={formData.educationExperience.education}\r\n              onChange={(e) =>\r\n                handleFormChange(\r\n                  \"educationExperience\",\r\n                  \"education\",\r\n                  e.target.value\r\n                )\r\n              }\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              label=\"Experience\"\r\n              value={formData.educationExperience.experience}\r\n              onChange={(e) =>\r\n                handleFormChange(\r\n                  \"educationExperience\",\r\n                  \"experience\",\r\n                  e.target.value\r\n                )\r\n              }\r\n              size=\"small\"\r\n            />\r\n\r\n            <TextField\r\n              label=\"Notice Period\"\r\n              value={formData.educationExperience.education}\r\n              onChange={(e) =>\r\n                handleFormChange(\r\n                  \"educationExperience\",\r\n                  \"education\",\r\n                  e.target.value\r\n                )\r\n              }\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <br />\r\n\r\n            <Typography\r\n              sx={{\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n              }}\r\n              variant=\"h5\"\r\n              fontWeight={600}\r\n            >\r\n              Add a CV for the employer\r\n            </Typography>\r\n\r\n            <Box\r\n              sx={{\r\n                border: \"1px solid #004c3d\",\r\n                width: 400,\r\n                p: 2,\r\n                borderRadius: \"4px\",\r\n                mt: 6,\r\n              }}\r\n            >\r\n              <input type=\"file\" onChange={handleFileChange} />\r\n            </Box>\r\n            {formData.resume && (\r\n              <Box\r\n                sx={{\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                <img\r\n                  src={URL.createObjectURL(formData.resume)}\r\n                  alt=\"Uploaded CV\"\r\n                  width=\"200\"\r\n                  height=\"400\"\r\n                />\r\n              </Box>\r\n            )}\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"80%\",\r\n        p: 5,\r\n        pl: 20,\r\n        pt: 0,\r\n      }}\r\n    >\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label} completed={completed[index]}>\r\n            <StepButton sx={{ color: \"#004c3d\" }} onClick={handleStep(index)}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <React.Fragment>\r\n            <Typography sx={{ mt: 2, mb: 1 }}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Box sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <Box sx={{ flex: \"1 1 auto\" }} />\r\n              <Button onClick={handleReset}>Reset</Button>\r\n            </Box>\r\n          </React.Fragment>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n\r\n      <Box\r\n        sx={{\r\n          justifyContent: \"center\",\r\n          textAlign: \"center\",\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {/* */}\r\n        {getStepContent(activeStep)}\r\n      </Box>\r\n\r\n      <React.Fragment>\r\n        <Box sx={{ display: \"flex\", flexDirection: \"row\", mt: 5 }}>\r\n          <Button\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            sx={{\r\n              color: \"white\",\r\n              backgroundColor: \"#004c3d\",\r\n              textTransform: \"none\",\r\n              \":hover\": {\r\n                color: \"white\",\r\n                backgroundColor: \"#004c3d\",\r\n                textTransform: \"none\",\r\n              },\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n          <Box sx={{ flex: \"1 1 auto\" }} />\r\n          <Button\r\n            onClick={handleNext}\r\n            sx={{\r\n              color: \"white\",\r\n              backgroundColor: \"#004c3d\",\r\n              textTransform: \"none\",\r\n              \":hover\": {\r\n                color: \"white\",\r\n                backgroundColor: \"#004c3d\",\r\n                textTransform: \"none\",\r\n              },\r\n            }}\r\n          >\r\n            Next\r\n          </Button>\r\n          {activeStep !== steps.length &&\r\n            (completed[activeStep] ? (\r\n              <Typography\r\n                variant=\"caption\"\r\n                sx={{\r\n                  display: \"inline-block\",\r\n                  color: \"white\",\r\n                  backgroundColor: \"#004c3d\",\r\n                  textTransform: \"none\",\r\n                }}\r\n              >\r\n                Step {activeStep + 1} already completed\r\n              </Typography>\r\n            ) : (\r\n              <Button\r\n                onClick={handleComplete}\r\n                sx={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"#004c3d\",\r\n                  textTransform: \"none\",\r\n                  ml: 4,\r\n                }}\r\n              >\r\n                {completedSteps() === totalSteps() - 1\r\n                  ? \"Finish\"\r\n                  : \"Complete Step\"}\r\n              </Button>\r\n            ))}\r\n        </Box>\r\n      </React.Fragment>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Login from \"../../Components/Login\";\r\nimport JobPostMoreInfoCard from \"../../Components/Find-Job/Job-more-info\";\r\nimport JobPostCard from \"../../Components/Find-Job/job-post-card\";\r\nimport JobListing from \"../../Components/JobListing\";\r\nimport { Box } from \"@mui/material\";\r\nimport CreatePostForm from \"../../Components/createjob\";\r\nimport NavbarApp from \"../../Components/navbar\";\r\nimport Quiz from \"../../Components/Quize\";\r\nimport ApplyForm from \"../../Components/Find-Job/Apply\";\r\n\r\nfunction ApplyFormPage() {\r\n  return (\r\n    <>\r\n      <Box sx={{ position: \"fixed\", top: 0, zIndex: 99999, width: \"100%\" }}>\r\n        <NavbarApp />\r\n      </Box>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <ApplyForm />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ApplyFormPage;\r\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["_useState","useState","_useState2","_slicedToArray","activeStep","setActiveStep","isLoggedIn","Cookies","get","_useState3","_useState4","title","setTitle","_useState5","_useState6","location","setLocation","_useState7","_useState8","discription","setDiscription","_useState9","_useState10","relatedTo","setRelatedTo","_useState11","_useState12","imageUrl","setImageUrl","_useState13","_useState14","responsibilities","setResponsibilities","_useState15","_useState16","tags","setTags","_useState17","_useState18","salaryStart","setSalaryStart","_useState19","_useState20","salaryEnd","setSalaryEnd","_useState21","_useState22","shift","setShift","_useState23","_useState24","requirements","setRequirements","_useState25","_useState26","qualifications","setQualifications","_useState27","_useState28","education","setEducation","_useState29","_useState30","experience","setExperience","_useState31","_useState32","language","setLanguage","_useState33","_useState34","noticePeriod","setNoticePeriod","_useState35","_useState36","jobType","setJobType","_useState37","_useState38","totalExp","setTotalExp","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","parseCommaSeparatedString","parseCommaSeparatedStringTags","responsibilitiesArray","requirementsArray","tagsArray","startSalary","endSalary","qualificationsArray","educationArray","experienceArray","languageArray","post","payload","wrap","_context","prev","next","preventDefault","str","split","map","item","name","trim","parseFloat","isNaN","console","log","JSON","stringify","doRequest","url","body","method","then","response","catch","error","stop","_x","apply","arguments","handleNext","prevStep","handleBack","_jsx","_Fragment","children","_jsxs","Box","Stepper","alternativeLabel","label","index","Step","StepLabel","display","flexDirection","alignItems","justifyContent","component","mt","maxWidth","Typography","variant","gap","TextField","required","placeholder","value","onChange","target","margin","fullWidth","multiline","rows","Button","onClick","sx","backgroundColor","color","textTransform","mb","ml","Grid","xs","md","lg","xl","style","textAlign","fontWeight","fontSize","cursor","textDecoration","Link","to","src","alt","height","getStepButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","StepButtonRoot","styled","ButtonBase","overridesResolver","props","styles","ownerState","_defineProperty","concat","stepButtonClasses","touchRipple","root","orientation","_ref2","_extends","width","padding","boxSizing","React","inProps","ref","useThemeProps","className","icon","optional","other","_objectWithoutPropertiesLoose","_React$useContext","StepContext","disabled","active","StepperContext","classes","slots","composeClasses","useUtilityClasses","childProps","child","isMuiElement","focusRipple","TouchRippleProps","clsx","undefined","steps","ApplyForm","_React$useState","_React$useState2","_React$useState3","_React$useState4","completed","setCompleted","_React$useState5","contactInfo","firstName","lastName","email","phoneNumber","city","county","educationExperience","resume","_React$useState6","formData","setFormData","handleFormChange","step","field","prevData","_objectSpread","handleFileChange","event","files","totalSteps","length","completedSteps","Object","keys","allStepsCompleted","newActiveStep","findIndex","i","p","pl","pt","nonLinear","StepButton","flex","alignContent","size","marginLeft","border","borderRadius","type","marginTop","URL","createObjectURL","getStepContent","prevActiveStep","newCompleted","position","top","zIndex","NavbarApp","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread2","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}